We can run deployment from commandline

kubectl create ns chander  ##namespace

kubectl run pi --image nginx [--restart=Never] [--port=8080] [--env="POD_NAMESPACE=chander" ] 
    [--env="STATE=true"] [--replicas=5] [--dry-run=true ]  [--override=JSON] [--rm] [--command -- cmd1 arg1]
    [-l env=dev ] [-o json,yaml,name ] 

Run Service from command line
 kubectl run pi --image nginx --expose=true 

Create Deployment from commandline 
 kubectl create [deployment] --image=nginx nginx --dry-run=true -oyaml
   other options are:
     clusterrole         Create a ClusterRole.
    clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole
    configmap           Create a configmap from a local file, directory or literal value
    cronjob             Create a cronjob with the specified name.
    deployment          Create a deployment with the specified name.
    job                 Create a job with the specified name.
    namespace           Create a namespace with the specified name
    poddisruptionbudget Create a pod disruption budget with the specified name.
    priorityclass       Create a priorityclass with the specified name.
    quota               Create a quota with the specified name.
    role                Create a role with single rule.
    rolebinding         Create a RoleBinding for a particular Role or ClusterRole
    secret              Create a secret using specified subcommand
    service             Create a service using specified subcommand.
    serviceaccount      Create a service account with the specified name

